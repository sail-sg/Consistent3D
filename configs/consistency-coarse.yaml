name: "consistency-coarse"
tag: "${rmspace:${system.prompt_processor.prompt},_}"
exp_root_dir: "outputs"
seed: 719

data_type: "random-camera-datamodule"
data:
  batch_size: 8
  width: 64
  height: 64
  camera_distance_range: [1.5, 2.0]
  elevation_range: [-10, 45]
  light_sample_strategy: "magic3d"
  eval_camera_distance: 2.0
  eval_fovy_deg: 45.
  batch_uniform_azimuth: true
  use_n_views: True
  n_views: 4
  azimuth_range: [-135, 225]

system_type: "consistency-system"
system:
  refinement: false
  geometry_type: "implicit-volume"
  geometry:
    radius: 2.
    normal_type: analytic
    # coarse to fine hash grid encoding
    # to ensure smooth analytic normals
    pos_encoding_config:
      otype: ProgressiveBandHashGrid
      n_levels: 16
      n_features_per_level: 2
      log2_hashmap_size: 19
      base_resolution: 16
      per_level_scale: 1.447269237440378 # max resolution 4096
      start_level: 8 # resolution ~200
      start_step: 0
      update_steps: 250
    density_bias: "blob_magic3d"
    density_activation: softplus
    density_blob_scale: 10.
    density_blob_std: 0.5
    isosurface_resolution: 128
    isosurface_threshold: auto
    isosurface_coarse_to_fine: true

  material_type: "diffuse-with-point-light-material"
  material:
    ambient_only_steps: 1000
    textureless_prob: 0.5
    ambient_light_color: [1.0, 1.0, 1.0]
    diffuse_light_color: [0.0, 0.0, 0.0]
    soft_shading: false
    albedo_activation: sigmoid

  background_type: "neural-environment-map-background"
  background:
    color_activation: sigmoid
    random_aug: true

  renderer_type: "nerf-volume-renderer"
  renderer:
    radius: ${system.geometry.radius}
    num_samples_per_ray: 512
    return_comp_normal: true # for geometry training

  prompt_processor_type: "stable-diffusion-prompt-processor"
  prompt_processor:
    pretrained_model_name_or_path: "stabilityai/stable-diffusion-2-1-base"
    prompt: ???

  guidance_type: "stable-diffusion-guidance"
  guidance:
    pretrained_model_name_or_path: "stabilityai/stable-diffusion-2-1-base"
    weighting_strategy: uniform
    guidance_scale: [0, 100., 50., 3000]
    recon_std_rescale: 0.0
    min_sigma_percent: 0.1
    max_sigma_percent: 0.98
    min_step_percent: 0.1
    max_step_percent: 0.98
    loss_type: consistency
    cur_steps: [0, 700, 100, 3000]
    grad_clip: [0, 2.0, 8.0, 3000]
    share_noise: true
    perturb_indices: sqrt
    perturb_factor: 200
    end_gap: 100
  freq:
    guidance_eval: 0

  loggers:
    wandb:
      enable: false
      project: "threestudio"
      name: None

  loss:
    lambda_sds: 1.
    lambda_orient: [0, 10., 1000., 2000]
    lambda_sparsity: 0.
    lambda_opaque: 0.
    lambda_normal_smoothness_2d: 0.
  optimizer:
    name: Adan
    args:
      eps: 1.0e-8
      lr: 0.005
      weight_decay: 2.0e-8
      max_grad_norm: 5.0
      foreach: True
      fused: False
    params:
      geometry.encoding:
        lr: 0.05
      geometry.density_network:
        lr: 0.005
      geometry.feature_network:
        lr: 0.005
      background:
        lr: 0.005

trainer:
  max_steps: 3000
  log_every_n_steps: 1
  num_sanity_val_steps: 0
  val_check_interval: 500
  enable_progress_bar: true
  precision: 16-mixed

checkpoint:
  save_last: true
  save_top_k: -1
  every_n_train_steps: ${trainer.max_steps}
